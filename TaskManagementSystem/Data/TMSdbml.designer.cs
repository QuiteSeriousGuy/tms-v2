#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskManagementSystem.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tms_innosoft")]
	public partial class TMSdbmlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertmstClient(mstClient instance);
    partial void UpdatemstClient(mstClient instance);
    partial void DeletemstClient(mstClient instance);
    partial void InserttrnTaskSub(trnTaskSub instance);
    partial void UpdatetrnTaskSub(trnTaskSub instance);
    partial void DeletetrnTaskSub(trnTaskSub instance);
    partial void InsertmstProduct(mstProduct instance);
    partial void UpdatemstProduct(mstProduct instance);
    partial void DeletemstProduct(mstProduct instance);
    partial void InsertmstStaff(mstStaff instance);
    partial void UpdatemstStaff(mstStaff instance);
    partial void DeletemstStaff(mstStaff instance);
    partial void InsertmstUser(mstUser instance);
    partial void UpdatemstUser(mstUser instance);
    partial void DeletemstUser(mstUser instance);
    partial void InsertmstUserForm(mstUserForm instance);
    partial void UpdatemstUserForm(mstUserForm instance);
    partial void DeletemstUserForm(mstUserForm instance);
    partial void InsertsysForm(sysForm instance);
    partial void UpdatesysForm(sysForm instance);
    partial void DeletesysForm(sysForm instance);
    partial void InserttrnTask(trnTask instance);
    partial void UpdatetrnTask(trnTask instance);
    partial void DeletetrnTask(trnTask instance);
    #endregion
		
		public TMSdbmlDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["tms_innosoftConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TMSdbmlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TMSdbmlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TMSdbmlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TMSdbmlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<mstClient> mstClients
		{
			get
			{
				return this.GetTable<mstClient>();
			}
		}
		
		public System.Data.Linq.Table<trnTaskSub> trnTaskSubs
		{
			get
			{
				return this.GetTable<trnTaskSub>();
			}
		}
		
		public System.Data.Linq.Table<mstProduct> mstProducts
		{
			get
			{
				return this.GetTable<mstProduct>();
			}
		}
		
		public System.Data.Linq.Table<mstStaff> mstStaffs
		{
			get
			{
				return this.GetTable<mstStaff>();
			}
		}
		
		public System.Data.Linq.Table<mstUser> mstUsers
		{
			get
			{
				return this.GetTable<mstUser>();
			}
		}
		
		public System.Data.Linq.Table<mstUserForm> mstUserForms
		{
			get
			{
				return this.GetTable<mstUserForm>();
			}
		}
		
		public System.Data.Linq.Table<sysForm> sysForms
		{
			get
			{
				return this.GetTable<sysForm>();
			}
		}
		
		public System.Data.Linq.Table<trnTask> trnTasks
		{
			get
			{
				return this.GetTable<trnTask>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstClient")]
	public partial class mstClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CompanyName;
		
		private string _CompanyAddress;
		
		private string _ContactNumber;
		
		private System.Nullable<System.DateTime> _DateAccepted;
		
		private bool _IsLocked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnDateAcceptedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAcceptedChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public mstClient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAccepted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAccepted
		{
			get
			{
				return this._DateAccepted;
			}
			set
			{
				if ((this._DateAccepted != value))
				{
					this.OnDateAcceptedChanging(value);
					this.SendPropertyChanging();
					this._DateAccepted = value;
					this.SendPropertyChanged("DateAccepted");
					this.OnDateAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnTaskSub")]
	public partial class trnTaskSub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TaskId;
		
		private string _Action;
		
		private System.Nullable<System.DateTime> _DateCalled;
		
		private System.Nullable<System.DateTime> _TimeCalled;
		
		private System.Nullable<System.DateTime> _FinishedDate;
		
		private System.Nullable<System.DateTime> _FinishedTime;
		
		private string _Remarks;
		
		private EntityRef<trnTask> _trnTask;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaskIdChanging(int value);
    partial void OnTaskIdChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnDateCalledChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCalledChanged();
    partial void OnTimeCalledChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeCalledChanged();
    partial void OnFinishedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishedDateChanged();
    partial void OnFinishedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishedTimeChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public trnTaskSub()
		{
			this._trnTask = default(EntityRef<trnTask>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="Int NOT NULL")]
		public int TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					if (this._trnTask.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCalled", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCalled
		{
			get
			{
				return this._DateCalled;
			}
			set
			{
				if ((this._DateCalled != value))
				{
					this.OnDateCalledChanging(value);
					this.SendPropertyChanging();
					this._DateCalled = value;
					this.SendPropertyChanged("DateCalled");
					this.OnDateCalledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeCalled", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeCalled
		{
			get
			{
				return this._TimeCalled;
			}
			set
			{
				if ((this._TimeCalled != value))
				{
					this.OnTimeCalledChanging(value);
					this.SendPropertyChanging();
					this._TimeCalled = value;
					this.SendPropertyChanged("TimeCalled");
					this.OnTimeCalledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishedDate
		{
			get
			{
				return this._FinishedDate;
			}
			set
			{
				if ((this._FinishedDate != value))
				{
					this.OnFinishedDateChanging(value);
					this.SendPropertyChanging();
					this._FinishedDate = value;
					this.SendPropertyChanged("FinishedDate");
					this.OnFinishedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishedTime
		{
			get
			{
				return this._FinishedTime;
			}
			set
			{
				if ((this._FinishedTime != value))
				{
					this.OnFinishedTimeChanging(value);
					this.SendPropertyChanging();
					this._FinishedTime = value;
					this.SendPropertyChanged("FinishedTime");
					this.OnFinishedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnTask_trnTaskSub", Storage="_trnTask", ThisKey="TaskId", OtherKey="Id", IsForeignKey=true)]
		public trnTask trnTask
		{
			get
			{
				return this._trnTask.Entity;
			}
			set
			{
				trnTask previousValue = this._trnTask.Entity;
				if (((previousValue != value) 
							|| (this._trnTask.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trnTask.Entity = null;
						previousValue.trnTaskSubs.Remove(this);
					}
					this._trnTask.Entity = value;
					if ((value != null))
					{
						value.trnTaskSubs.Add(this);
						this._TaskId = value.Id;
					}
					else
					{
						this._TaskId = default(int);
					}
					this.SendPropertyChanged("trnTask");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstProduct")]
	public partial class mstProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ProductCode;
		
		private string _ProductDescription;
		
		private bool _IsLocked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnProductDescriptionChanging(string value);
    partial void OnProductDescriptionChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public mstProduct()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDescription", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProductDescription
		{
			get
			{
				return this._ProductDescription;
			}
			set
			{
				if ((this._ProductDescription != value))
				{
					this.OnProductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProductDescription = value;
					this.SendPropertyChanged("ProductDescription");
					this.OnProductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstStaff")]
	public partial class mstStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _StaffName;
		
		private string _ContactNumber;
		
		private bool _IsLocked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public mstStaff()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstUser")]
	public partial class mstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffId;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<int> _Designation;
		
		private bool _IsLocked;
		
		private EntitySet<mstUserForm> _mstUserForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDesignationChanging(System.Nullable<int> value);
    partial void OnDesignationChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public mstUser()
		{
			this._mstUserForms = new EntitySet<mstUserForm>(new Action<mstUserForm>(this.attach_mstUserForms), new Action<mstUserForm>(this.detach_mstUserForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="Int")]
		public System.Nullable<int> Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstUserForm", Storage="_mstUserForms", ThisKey="StaffId,Username", OtherKey="StaffId,Username")]
		public EntitySet<mstUserForm> mstUserForms
		{
			get
			{
				return this._mstUserForms;
			}
			set
			{
				this._mstUserForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_mstUserForms(mstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = this;
		}
		
		private void detach_mstUserForms(mstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.mstUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mstUserForms")]
	public partial class mstUserForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StaffId;
		
		private string _Username;
		
		private int _FormId;
		
		private bool _CanAdd;
		
		private bool _CanSave;
		
		private bool _CanEdit;
		
		private bool _CanDelete;
		
		private bool _CanView;
		
		private bool _CanPreview;
		
		private bool _CanPrint;
		
		private EntityRef<mstUser> _mstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFormIdChanging(int value);
    partial void OnFormIdChanged();
    partial void OnCanAddChanging(bool value);
    partial void OnCanAddChanged();
    partial void OnCanSaveChanging(bool value);
    partial void OnCanSaveChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanViewChanging(bool value);
    partial void OnCanViewChanged();
    partial void OnCanPreviewChanging(bool value);
    partial void OnCanPreviewChanged();
    partial void OnCanPrintChanging(bool value);
    partial void OnCanPrintChanged();
    #endregion
		
		public mstUserForm()
		{
			this._mstUser = default(EntityRef<mstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="Int NOT NULL")]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					if (this._mstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormId", DbType="Int NOT NULL")]
		public int FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAdd", DbType="Bit NOT NULL")]
		public bool CanAdd
		{
			get
			{
				return this._CanAdd;
			}
			set
			{
				if ((this._CanAdd != value))
				{
					this.OnCanAddChanging(value);
					this.SendPropertyChanging();
					this._CanAdd = value;
					this.SendPropertyChanged("CanAdd");
					this.OnCanAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanSave", DbType="Bit NOT NULL")]
		public bool CanSave
		{
			get
			{
				return this._CanSave;
			}
			set
			{
				if ((this._CanSave != value))
				{
					this.OnCanSaveChanging(value);
					this.SendPropertyChanging();
					this._CanSave = value;
					this.SendPropertyChanged("CanSave");
					this.OnCanSaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanView", DbType="Bit NOT NULL")]
		public bool CanView
		{
			get
			{
				return this._CanView;
			}
			set
			{
				if ((this._CanView != value))
				{
					this.OnCanViewChanging(value);
					this.SendPropertyChanging();
					this._CanView = value;
					this.SendPropertyChanged("CanView");
					this.OnCanViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPreview", DbType="Bit NOT NULL")]
		public bool CanPreview
		{
			get
			{
				return this._CanPreview;
			}
			set
			{
				if ((this._CanPreview != value))
				{
					this.OnCanPreviewChanging(value);
					this.SendPropertyChanging();
					this._CanPreview = value;
					this.SendPropertyChanged("CanPreview");
					this.OnCanPreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrint", DbType="Bit NOT NULL")]
		public bool CanPrint
		{
			get
			{
				return this._CanPrint;
			}
			set
			{
				if ((this._CanPrint != value))
				{
					this.OnCanPrintChanging(value);
					this.SendPropertyChanging();
					this._CanPrint = value;
					this.SendPropertyChanged("CanPrint");
					this.OnCanPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mstUser_mstUserForm", Storage="_mstUser", ThisKey="StaffId,Username", OtherKey="StaffId,Username", IsForeignKey=true)]
		public mstUser mstUser
		{
			get
			{
				return this._mstUser.Entity;
			}
			set
			{
				mstUser previousValue = this._mstUser.Entity;
				if (((previousValue != value) 
							|| (this._mstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mstUser.Entity = null;
						previousValue.mstUserForms.Remove(this);
					}
					this._mstUser.Entity = value;
					if ((value != null))
					{
						value.mstUserForms.Add(this);
						this._StaffId = value.StaffId;
						this._Username = value.Username;
					}
					else
					{
						this._StaffId = default(int);
						this._Username = default(string);
					}
					this.SendPropertyChanged("mstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sysForm")]
	public partial class sysForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Form;
		
		private string _FormDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFormChanging(string value);
    partial void OnFormChanged();
    partial void OnFormDescriptionChanging(string value);
    partial void OnFormDescriptionChanged();
    #endregion
		
		public sysForm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Form
		{
			get
			{
				return this._Form;
			}
			set
			{
				if ((this._Form != value))
				{
					this.OnFormChanging(value);
					this.SendPropertyChanging();
					this._Form = value;
					this.SendPropertyChanged("Form");
					this.OnFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormDescription", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FormDescription
		{
			get
			{
				return this._FormDescription;
			}
			set
			{
				if ((this._FormDescription != value))
				{
					this.OnFormDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FormDescription = value;
					this.SendPropertyChanged("FormDescription");
					this.OnFormDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trnTask")]
	public partial class trnTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TaskNo;
		
		private System.DateTime _TaskDate;
		
		private int _ClientId;
		
		private string _Caller;
		
		private string _Concern;
		
		private int _AnsweredBy;
		
		private int _StaffId;
		
		private int _ProductId;
		
		private string _Remarks;
		
		private string _Status;
		
		private string _ProblemType;
		
		private string _Severity;
		
		private string _Solution;
		
		private System.Nullable<System.DateTime> _DoneDate;
		
		private System.Nullable<System.DateTime> _DoneTime;
		
		private System.Nullable<int> _VerifiedBy;
		
		private bool _IsLocked;
		
		private EntitySet<trnTaskSub> _trnTaskSubs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaskNoChanging(string value);
    partial void OnTaskNoChanged();
    partial void OnTaskDateChanging(System.DateTime value);
    partial void OnTaskDateChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnCallerChanging(string value);
    partial void OnCallerChanged();
    partial void OnConcernChanging(string value);
    partial void OnConcernChanged();
    partial void OnAnsweredByChanging(int value);
    partial void OnAnsweredByChanged();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnProblemTypeChanging(string value);
    partial void OnProblemTypeChanged();
    partial void OnSeverityChanging(string value);
    partial void OnSeverityChanged();
    partial void OnSolutionChanging(string value);
    partial void OnSolutionChanged();
    partial void OnDoneDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDoneDateChanged();
    partial void OnDoneTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDoneTimeChanged();
    partial void OnVerifiedByChanging(System.Nullable<int> value);
    partial void OnVerifiedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public trnTask()
		{
			this._trnTaskSubs = new EntitySet<trnTaskSub>(new Action<trnTaskSub>(this.attach_trnTaskSubs), new Action<trnTaskSub>(this.detach_trnTaskSubs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskNo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaskNo
		{
			get
			{
				return this._TaskNo;
			}
			set
			{
				if ((this._TaskNo != value))
				{
					this.OnTaskNoChanging(value);
					this.SendPropertyChanging();
					this._TaskNo = value;
					this.SendPropertyChanged("TaskNo");
					this.OnTaskNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskDate", DbType="DateTime NOT NULL")]
		public System.DateTime TaskDate
		{
			get
			{
				return this._TaskDate;
			}
			set
			{
				if ((this._TaskDate != value))
				{
					this.OnTaskDateChanging(value);
					this.SendPropertyChanging();
					this._TaskDate = value;
					this.SendPropertyChanged("TaskDate");
					this.OnTaskDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caller", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Caller
		{
			get
			{
				return this._Caller;
			}
			set
			{
				if ((this._Caller != value))
				{
					this.OnCallerChanging(value);
					this.SendPropertyChanging();
					this._Caller = value;
					this.SendPropertyChanged("Caller");
					this.OnCallerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concern", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Concern
		{
			get
			{
				return this._Concern;
			}
			set
			{
				if ((this._Concern != value))
				{
					this.OnConcernChanging(value);
					this.SendPropertyChanging();
					this._Concern = value;
					this.SendPropertyChanged("Concern");
					this.OnConcernChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnsweredBy", DbType="Int NOT NULL")]
		public int AnsweredBy
		{
			get
			{
				return this._AnsweredBy;
			}
			set
			{
				if ((this._AnsweredBy != value))
				{
					this.OnAnsweredByChanging(value);
					this.SendPropertyChanging();
					this._AnsweredBy = value;
					this.SendPropertyChanged("AnsweredBy");
					this.OnAnsweredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="Int NOT NULL")]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProblemType
		{
			get
			{
				return this._ProblemType;
			}
			set
			{
				if ((this._ProblemType != value))
				{
					this.OnProblemTypeChanging(value);
					this.SendPropertyChanging();
					this._ProblemType = value;
					this.SendPropertyChanged("ProblemType");
					this.OnProblemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Severity", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Severity
		{
			get
			{
				return this._Severity;
			}
			set
			{
				if ((this._Severity != value))
				{
					this.OnSeverityChanging(value);
					this.SendPropertyChanging();
					this._Severity = value;
					this.SendPropertyChanged("Severity");
					this.OnSeverityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solution", DbType="NVarChar(255)")]
		public string Solution
		{
			get
			{
				return this._Solution;
			}
			set
			{
				if ((this._Solution != value))
				{
					this.OnSolutionChanging(value);
					this.SendPropertyChanging();
					this._Solution = value;
					this.SendPropertyChanged("Solution");
					this.OnSolutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoneDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DoneDate
		{
			get
			{
				return this._DoneDate;
			}
			set
			{
				if ((this._DoneDate != value))
				{
					this.OnDoneDateChanging(value);
					this.SendPropertyChanging();
					this._DoneDate = value;
					this.SendPropertyChanged("DoneDate");
					this.OnDoneDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoneTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DoneTime
		{
			get
			{
				return this._DoneTime;
			}
			set
			{
				if ((this._DoneTime != value))
				{
					this.OnDoneTimeChanging(value);
					this.SendPropertyChanging();
					this._DoneTime = value;
					this.SendPropertyChanged("DoneTime");
					this.OnDoneTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerifiedBy", DbType="Int")]
		public System.Nullable<int> VerifiedBy
		{
			get
			{
				return this._VerifiedBy;
			}
			set
			{
				if ((this._VerifiedBy != value))
				{
					this.OnVerifiedByChanging(value);
					this.SendPropertyChanging();
					this._VerifiedBy = value;
					this.SendPropertyChanged("VerifiedBy");
					this.OnVerifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trnTask_trnTaskSub", Storage="_trnTaskSubs", ThisKey="Id", OtherKey="TaskId")]
		public EntitySet<trnTaskSub> trnTaskSubs
		{
			get
			{
				return this._trnTaskSubs;
			}
			set
			{
				this._trnTaskSubs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trnTaskSubs(trnTaskSub entity)
		{
			this.SendPropertyChanging();
			entity.trnTask = this;
		}
		
		private void detach_trnTaskSubs(trnTaskSub entity)
		{
			this.SendPropertyChanging();
			entity.trnTask = null;
		}
	}
}
#pragma warning restore 1591

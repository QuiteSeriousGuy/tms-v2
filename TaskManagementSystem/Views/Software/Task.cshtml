
@{
    ViewBag.Title = "Task";
}

<head>
    @Styles.Render("~/Content/styleD.css")
</head>
@Html.Partial("NavBar")

<div class="container">
    <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <section class="content-header">
            <h2>
                Task List
            </h2>
            <ol class="breadcrumb">
                <li><a href="../Software/Dashboard"><i class="fa fa-table"></i> Home</a></li>
                <li class="active">Task</li>
            </ol>
        </section>
        
        <form>
            <div id="theInputDate"></div>
            <wj-input-date value="theDate" min="2014-8-1" format="M/d/yyyy">
                <div id="cboClientNameDiv" style="width :300px;"></div>
                <div id="cboStaffNameDiv" style="width :120px;"></div>
</form>
        <div class="btn-group-horizontal btn-sm pull-right">
            <button class="btn btn-info" id="" onclick="cmdShowAddModal_OnClick()"><i class="fa fa-plus"></i> Add</button>
            <a href="~/Software/Dashboard" class="btn btn-danger "><i class="fa fa-close"></i> Close</a>
        </div>

        <div id="userCollectionGrid"></div>

    </div>
        
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/software-js")

<script type="text/javascript">

    var clientList;
    var staffList;
    var userList;

    var cboBoxClientName;
    var cboBoxStaffName;

    // ==================
    // Get Client List Data
    // ==================

    function getClientName() {
        var clientList = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/client/list',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (results) {
                var lastUser = 0;
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        clientList.push({
                            Id: results[i]["Id"],
                            CompanyName: results[i]["CompanyName"],
                            CompanyAddress: results[i]["CompanyAddress"],
                            ContactNumber: results[i]["ContactNumber"],
                            DateAccepted: results[i]["DateAccepted"],
                            IsLocked: results[i]["IsLocked"]
                        });
                    }
                    cboClientfName(clientList);
                } else {
                    cboClientfName(clientList);
                }
            }
        });

        return clientList;
    }



    // =============================
    // Combo Box Wijmo - Client List
    // =============================

    function cboClientfName(clientList) {
        var clientCollection = new wijmo.collections.CollectionView(clientList);
        var clientList = new Array();
        for (var i = 0; i < clientCollection.items.length; i++) {

            clientList.push(clientCollection.items[i].CompanyName);
        }

        cboBoxClientName.dispose();
        cboBoxClientName = new wijmo.input.ComboBox('#cboClientNameDiv', {
            placeholder: "Select Client",
            itemsSource: clientList,
            isEditable: false
        });
    }

    // ==================
    // Get StaffName Data
    // ==================

    function getStaffName() {
        var staffList = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/product/list',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (results) {
                var lastUser = 0;
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        staffList.push({
                            Id: results[i]["Id"],
                            ProductCode: results[i]["ProductCode"],
                            ProductDescription: results[i]["ProductDescription"]
                        });
                    }
                    cboStaffName(staffList);
                } else {
                    cboStaffName(staffList);
                }
            }
        });

        return staffList;
    }

    // =============================
    // Combo Box Wijmo - Staff Name
    // =============================

    function cboStaffName(staffList) {
        var staffCollection = new wijmo.collections.CollectionView(staffList);
        var staffList = new Array();
        for (var i = 0; i < staffCollection.items.length; i++) {

            staffList.push(staffCollection.items[i].ProductCode);
        }

        cboBoxStaffName.dispose();
        cboBoxStaffName = new wijmo.input.ComboBox('#cboStaffNameDiv', {
            placeholder: "Select Staff",
            itemsSource: staffList,
            isEditable: false
        });
    }

    // =======================
    // Get UserMasterList Data
    // =======================

    function getUserMasterList() {
        var userList = new wijmo.collections.ObservableArray();
        $("#loadingModal").modal("show");
        $.ajax({
            url: '/api/user/list',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (results) {
                var lastUser = 0;
                $("#loadingModal").modal("hide");
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        userList.push({
                            EditId: "<button class='btn btn-primary btn-xs btn-block' id='userEditButton' onClick='cmdUserEditButton_OnClick()'><i class='fa fa-bars'></i> View</button>",
                            DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='userDeleteButton' onclick='cmdUserDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                            Id: results[i]["Id"],
                            Username: results[i]["Username"],
                            Password: results[i]["Password"],
                            StaffName: results[i]["StaffName"],
                            StaffId: results[i]["StaffId"],
                            Designation: results[i]["Designation"],
                            IsLocked: results[i]["IsLocked"]

                        });
                    }
                }
            }
        });

        return userList;
    }
   

    $(document).ready(function () {

        cboBoxClientName = new wijmo.input.ComboBox('#cboClientNameDiv');
        cboBoxStaffName = new wijmo.input.ComboBox('#cboStaffNameDiv');
        getClientName();
        getStaffName();

        userList = new wijmo.collections.CollectionView(getUserMasterList());
        userList.canFilter = true;
        userList.pageSize = 15;

        //Users - Flex Grid
        userGrid = new wijmo.grid.FlexGrid('#userCollectionGrid');
        userGrid.initialize({
            columns: [
            {
                "header": "View",
                "binding": "EditId",
                "width": 70,
                "align": "center",
                "isContentHtml": true
            },
            {
                "header": "Delete",
                "binding": "DeleteId",
                "width": 90,
                "align": "center",
                "isContentHtml": true

            },
            {
                "header": "Client",
                "binding": "Username",
                "align": "center",
                "allowSorting": true,
                "width": "2.5*"
            },
            {
                "header": "Staff Name",
                "binding": "StaffName",
                "align": "center",
                "allowSorting": true,
                "width": "4*"
            },
            {
                "header": "L",
                "binding": "IsLocked",
                "align": "center",
                "allowSorting": true,
                "width": "1.5*"
            }],
            autoGenerateColumns: false,
            itemsSource: userList,
            isReadOnly: true,
            autoSizeMode: wijmo.grid.AutoSizeMode.Both,
            allowDragging: wijmo.grid.AllowDragging.None,
            selectionMode: wijmo.grid.SelectionMode.Row
        });

        userGrid.trackChanges = true;

        // the date/time being edited
        var theDate = new Date();

        // create InputDate control
        var inputDate = new wijmo.input.InputDate('#theInputDate', {
            min: new Date(2014, 8, 1),
            format: 'M/d/yyyy',
            value: theDate
        });
        inputDate.valueChanged.addHandler(valueChanged);

        // create InputTime control
        var inputTime = new wijmo.input.InputTime('#theInputTime', {
            min: new Date(2014, 8, 1, 9, 0),
            max: new Date(2014, 8, 1, 17, 0),
            step: 15,
            format: 'h:mm tt',
            value: theDate
        });
        inputTime.valueChanged.addHandler(valueChanged);

        // create Calendar control
        var calendar = new wijmo.input.Calendar('#theCalendar', {
            min: new Date(2014, 8, 1),
            value: theDate
        });
        calendar.valueChanged.addHandler(valueChanged);

        // udpate theDate when the value changes in any of the controls
        function valueChanged(s, e) {
            theDate = s.value;
            inputDate.value = inputTime.value = calendar.value = theDate;
        }

        
    });
</script>

@Html.Partial("Footer")

@{
    ViewBag.Title = "Task";
}

<head>
    @Styles.Render("~/Content/styleD.css")
</head>
@Html.Partial("NavBar")

<div class="container">
    <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <section class="content-header">
            <h2>
                Task List
            </h2>
            <ol class="breadcrumb">
                <li><a href="../Software/Dashboard"><i class="fa fa-table"></i> Home</a></li>
                <li class="active">Task</li>
            </ol>
        </section>

        <!-- Loading Modal -->
        <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <div class="modal-body">
                        <h4 style="text-align:center; color:#000000;">Loading...</h4>
                    </div>
                    <div class="modal-footer">
                        <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/progress_bar.gif'>
                    </div>
                </div>
            </div>
        </div>

        <!-- Company Delete -->
        <div class="modal fade" id="deleteStaffConfirm" role="dialog">
            <div class="modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Delete Staff? <i class="fa fa-trash"></i></h4>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger btn-sm" id="cmdConfirmDeleteStaff" onclick="cmdStaffConfirmDeleteButton_OnClick()">Delete</button>
                        <button id="cmdConfirmDeleteCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
        
        <form>
            <div id="theInputDate"></div>
            <wj-input-date value="theDate" min="2014-8-1" format="M/d/yyyy">
        </form>
        <div class="btn-group-horizontal btn-sm pull-right">
            <a href="@Url.Action("AddTask","Software")" class="btn btn-info" ><i class="fa fa-plus"></i> Add</a> 
                <a href="~/Software/Dashboard" class="btn btn-danger "><i class="fa fa-close"></i> Close</a>
        </div>

        <div id="userCollectionGrid"></div>

    </div>
        
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/software-js")

<script type="text/javascript">

    var clientList;
    var staffList;
    var taskList;

    var cboBoxClientName;
    var cboBoxStaffName;
    var dateItem;
    var dateId;

    var userGrid;

    var inputDate;
    var clientList;

    // =======================
    // Get UserMasterList Data
    // =======================

    function getUserMasterList() {
        var result = new wijmo.collections.ObservableArray();
        $("#loadingModal").modal("show");
        $.ajax({
            url: '/api/task/listByDate/' + dateId,
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            //data: data,
            success: function (results) {
                $("#loadingModal").modal("hide");
                var lastUser = 0;
                $("#loadingModal").modal("hide");
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        var name = "";
                        for (x = 0; x < clientList.length; x++) {
                            if (clientList[x].Id == results[i]["ClientId"]) {
                                name = clientList[x].CompanyName;
                                break;
                            }
                        }

                        result.push({
                            EditId: "<button class='btn btn-primary btn-xs btn-block' id='userEditButton'><i class='fa fa-bars'></i> View</button>",
                            DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='userDeleteButton' onclick='cmdStaffDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                            Id: results[i]["Id"],
                            TaskNo: results[i]["TaskNo"],
                            TaskDate: results[i]["TaskDate"],
                            ClientId: name,
                            Status: results[i]["Status"],
                            ProductId: results[i]["ProductId"],
                            ProductCode: results[i]["ProductCode"],
                            ProblemType: results[i]["ProblemType"]

                        });
                    }
                }
            }
        });

        return result;
    }

    //Client list

    function getClientMasterList() {
        clientList = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/client/list',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (results) {
                var lastClient = 0;
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        clientList.push({
                            Id: results[i]["Id"],
                            CompanyName: results[i]["CompanyName"],
                            CompanyAddress: results[i]["CompanyAddress"],
                            ContactNumber: results[i]["ContactNumber"],
                            IsLocked: results[i]["IsLocked"]

                        });
                    }
                }
            

                taskList = new wijmo.collections.CollectionView(getUserMasterList());

                taskList.canFilter = true;
                taskList.pageSize = 15;

                //Users - Flex Grid
                userGrid = new wijmo.grid.FlexGrid('#userCollectionGrid');
                userGrid.initialize({
                    columns: [
                    {
                        "header": "View",
                        "binding": "EditId",
                        "width": 70,
                        "align": "center",
                        "isContentHtml": true
                    },
                    {
                        "header": "Delete",
                        "binding": "DeleteId",
                        "width": 90,
                        "align": "center",
                        "isContentHtml": true

                    },
                    {
                        "header": "Client",
                        "binding": "ClientId",
                        "align": "center",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "System",
                        "binding": "ProductCode",
                        "align": "center",
                        "allowSorting": true,
                        "width": "1.5*"
                    },
                    {
                        "header": "Problem Type",
                        "binding": "ProblemType",
                        "align": "center",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Status",
                        "binding": "Status",
                        "align": "center",
                        "allowSorting": true,
                        "width": "1.5*"
                    }],
                    autoGenerateColumns: false,
                    itemsSource: taskList,
                    isReadOnly: true,
                    autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                    allowDragging: wijmo.grid.AllowDragging.None,
                    selectionMode: wijmo.grid.SelectionMode.Row
                });

                userGrid.trackChanges = true;
            }
        });

        return clientList;
    }

    // =====================
    // Staff delete Button
    // =====================
    function cmdStaffDeleteButton_OnClick() {
        //var id = taskList.currentItem.Id;

        //$('#deleteStaffConfirm').modal({
        //    show: true,
        //    backdrop: 'static'
        //});
        //$("#cmdConfirmDeleteStaff").prop("disabled", false);
        //$("#cmdConfirmDeleteCloseButton").prop("disabled", false);

        toastr.success("lol");
    }
    // Company Confirm Delete Button
    function cmdStaffConfirmDeleteButton_OnClick() {
        $("#cmdConfirmDeleteStaff").prop("disabled", true);
        $("#cmdConfirmDeleteCloseButton").prop("disabled", true);

        //====================
        var id = staffList.currentItem.Id;

        $.ajax({
            url: '/api/staff/delete/' + id,
            type: "DELETE",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            statusCode: {
                200: function () {
                    $("#cmdConfirmDeleteStaff").prop("disabled", true);
                    $("#cmdConfirmDeleteCloseButton").prop("disabled", true);
                    $('#deleteStaffConfirm').modal('hide');
                    toastr.success("Successfully Deleted");
                    refresh();
                },
                404: function () {
                    toastr.error("Request Not Found");
                    $('#deleteStaffConfirm').modal('hide');
                    $("#cmdConfirmDeleteStaff").prop("disabled", false);
                    $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                },
                400: function () {
                    toastr.error("Can't be deleted");
                    $('#deleteStaffConfirm').modal('hide');
                    $("#cmdConfirmDeleteStaff").prop("disabled", false);
                    $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                }
            }
        });
    }

    $(document).ready(function () {

        theDate = new Date();
        // create InputDate control
        inputDate = new wijmo.input.InputDate('#theInputDate', {
            min: new Date(2014, 8, 1),
            format: 'M/d/yyyy',
            value: theDate,
            onValueChanged: function () {
                dateId = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                console.log(dateId);

                taskList = new wijmo.collections.CollectionView(getUserMasterList());

                taskList.canFilter = true;
                taskList.pageSize = 15;

                //Users - Flex Grid
                userGrid.itemsSource = taskList;
                userGrid.trackChanges = true;
            }
        });
        //inputDate.valueChanged.addHandler(valueChanged);

        dateId = [inputDate.value.getMonth() + 1, inputDate.value.getDate(), inputDate.value.getFullYear()].join('-');
        console.log(dateId);


        getClientMasterList();



        // the date/time being edited


        //// create InputTime control
        //var inputTime = new wijmo.input.InputTime('#theInputTime', {
        //    min: new Date(2014, 8, 1, 9, 0),
        //    max: new Date(2014, 8, 1, 17, 0),
        //    step: 15,
        //    format: 'h:mm tt',
        //    value: theDate
        //});
        //inputTime.valueChanged.addHandler(valueChanged);

        //// create Calendar control
        //var calendar = new wijmo.input.Calendar('#theCalendar', {
        //    min: new Date(2014, 8, 1),
        //    value: theDate
        //});
        //calendar.valueChanged.addHandler(valueChanged);

        // udpate theDate when the value changes in any of the controls
        //function valueChanged(s, e) {
        //    theDate = s.value;
        //    inputDate.value = inputTime.value = calendar.value = theDate;
        //}

        
    });
</script>

@Html.Partial("Footer")
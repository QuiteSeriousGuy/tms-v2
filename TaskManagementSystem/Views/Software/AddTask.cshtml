
@{
    ViewBag.Title = "AddTask";
}

<head>
    @Styles.Render("~/Content/styleD.css")
</head>
@Html.Partial("NavBar")

<div class="container">
    <section class="content-header">
        <h2>
            Task Detail
        </h2>
        <ol class="breadcrumb">
            <li><a href="../Software/Dashboard"><i class="fa fa-table"></i> Home</a></li>
            <li> <a href="../Software/Task">Task</a></li>
            <li class="active">Add Task</li>
        </ol>
    </section>

    <div class="btn-group-horizontal btn-sm pull-right">
        <button class="btn btn-info" id="" onclick="cmdShowAddModal_OnClick()"><i class="fa fa-plus"></i> Add</button>
        <a href="../Software/Task" class="btn btn-danger "><i class="fa fa-close"></i> Close</a>
    </div>
    <br/>
    <br/>
    <div class="row">
        <form class="form-horizontal" id="add-form">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="barCode" class="col-sm-3 control-label">Task Date</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control requiredField" id="theInputDate">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="barCode" class="col-sm-3 control-label">Task No</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control requiredField" id="taskNoDiv">
                        </div>
                    </div>
                    <!--Client-->
                    <div class="form-group">
                        <label for="" class="col-sm-3 control-label">Client</label>
                        <div class="col-sm-5">
                            <div id="clientDiv"></div>
                        </div>
                    </div>
                    <!--Product-->
                    <div class="form-group">
                        <label for="" class="col-sm-3 control-label">Product</label>
                        <div class="col-sm-5">
                            <div style="width:330px;" id="productDiv"></div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="barCode" class="col-sm-3 control-label">Caller</label>
                        <div class="col-sm-6">
                            <input type="text" class="form-control requiredField" id="password">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="barCode" class="col-sm-3 control-label">Concern</label>
                        <div class="col-sm-6">
                            <textarea type="" class="form-control requiredField" id="password"></textarea>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <!--Staff-->
                    <div class="form-group">
                        <label for="" class="col-sm-3 control-label">Answered By</label>
                        <div class="col-sm-5">
                            <div id="cboStaffNameDiv"></div>
                        </div>
                    </div>
                    <!--Staff Assigned-->
                    <div class="form-group">
                        <label for="" class="col-sm-3 control-label">Staff Assigned</label>
                        <div class="col-sm-5">
                            <div id="cboStaffAssignedDiv"></div>
                        </div>
                    </div>
                    <!--Remarks-->
                    <div class="form-group">
                        <label for="barCode" class="col-sm-3 control-label">Remarks</label>
                        <div class="col-sm-6">
                            <textarea type="" class="form-control requiredField" id="password"></textarea>
                        </div>
                    </div>
                    <!--Problem Type-->
                    <div class="form-group">
                        <label for="designation" class="col-sm-3 control-label">Problem Type</label>
                        <div class="col-sm-6">
                            <div style="width:290px;" id="problemTypeDiv"></div>
                        </div>
                    </div>
                    <!--Severity-->
                    <div class="form-group">
                        <label for="designation" class="col-sm-3 control-label">Severity</label>
                        <div class="col-sm-6">
                            <div style="width:250px;" id="severityDiv"></div>
                        </div>
                    </div>
                    <!--Status-->
                    <div class="form-group">
                        <label for="designation" class="col-sm-3 control-label">Severity</label>
                        <div class="col-sm-6">
                            <div id="statusDiv"></div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <div class="container">
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#menu1">Action</a></li>
            <li><a data-toggle="tab" href="#menu2">Solution</a></li>
        </ul>

        <div class="tab-content">
            <div id="menu1" class="tab-pane fade">
                <div id="actionDiv"></div>
            </div>
            <div id="menu2" class="tab-pane fade">
                <h3>Menu 2</h3>
                <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.</p>
            </div>
        </div>
    </div>

</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/software-js")
<script type="text/javascript">

    var clientList;
    var productList;
    var cboBoxClientName;
    var cboClientNameSelectedValue = "";
    var cboStaffName;
    var cboAssignedStaffName;
    var problemTypeList;
    var taskList;

    // ==================
    // Get Client Data
    // ==================

    function getClientName() {
        clientList = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/client/list',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (results) {
                var lastUser = 0;
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        clientList.push({
                            Id: results[i]["Id"],
                            CompanyName: results[i]["CompanyName"]
                        });
                    }
                    cboClientName(clientList);
                } else {
                    cboClientName(clientList);
                }
            }
        });

        return clientList;
    }

    // =============================
    // Combo Box Wijmo - Client
    // =============================

    function cboClientName(productList) {
        var clientCollection = new wijmo.collections.CollectionView(productList);
        var productList = new Array();
        for (var i = 0; i < clientCollection.items.length; i++) {

            productList.push(clientCollection.items[i].CompanyName);
        }

        cboBoxClientName.dispose();
        cboBoxClientName = new wijmo.input.ComboBox('#clientDiv', {
            placeholder: "Select Client",
            itemsSource: productList
        });

        cboBoxClientName.onSelectedIndexChanged = function () {
        }
    }

    // ==================
    // Get Product Data
    // ==================

    function getProduct() {
        var productList = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/product/list',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (results) {
                var lastUser = 0;
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        productList.push({
                            Id: results[i]["Id"],
                            ProductCode: results[i]["ProductCode"],
                            ProductDescription: results[i]["ProductDescription"]
                        });
                    }
                    cboProductName(productList);
                } else {
                    cboProductName(productList);
                }
            }
        });

        return productList;
    }

    // =============================
    // Combo Box Wijmo - Product 
    // =============================

    function cboProductName(productList) {
        var productCollection = new wijmo.collections.CollectionView(productList);
        var productList = new Array();
        for (var i = 0; i < productCollection.items.length; i++) {

            productList.push(productCollection.items[i].ProductDescription);
        }

        cboBoxProductName.dispose();
        cboBoxProductName = new wijmo.input.ComboBox('#productDiv', {
            placeholder: "Select Product",
            itemsSource: productList,
            isEditable: false,
        });

        cboBoxProductName.onSelectedIndexChanged = function () {
        }
    }

    // ==================
    // Get StaffName Data
    // ==================

    function getStaffName() {
        var staffList = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/staff/list',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (results) {
                var lastUser = 0;
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        staffList.push({
                            Id: results[i]["Id"],
                            StaffName: results[i]["StaffName"]
                        });
                    }
                    createCboStaff(staffList);
                    createCboStaffAssignedName(staffList);

                } else {
                    createCboStaff(staffList);
                    createCboStaffAssignedName(staffList);
                }
            }
        });

        return staffList;
    }

    // =============================
    // Combo Box Wijmo - Staff Name
    // =============================

    function createCboStaff(staffList) {
        var staffCollection = new wijmo.collections.CollectionView(staffList);
        var astaffList = new Array();
        for (var i = 0; i < staffCollection.items.length; i++) {

            astaffList.push(staffCollection.items[i].StaffName);
        }

        cboStaffName.dispose();
        cboStaffName = new wijmo.input.ComboBox('#cboStaffNameDiv', {
            placeholder: "Select Staff",
            itemsSource: astaffList,
            isEditable: false
        });

        cboStaffName.onSelectedIndexChanged = function () {
            document.getElementById("staffId").value = staffCollection.items[this.selectedIndex].Id
        }
    }

    // =============================
    // Combo Box Wijmo - Staff Assigned
    // =============================

    function createCboStaffAssignedName(staffList) {
        var staffCollection = new wijmo.collections.CollectionView(staffList);
        var astaffList = new Array();
        for (var i = 0; i < staffCollection.items.length; i++) {

            astaffList.push(staffCollection.items[i].StaffName);
        }

        cboAssignedStaffName.dispose();
        cboAssignedStaffName = new wijmo.input.ComboBox('#cboStaffAssignedDiv', {
            placeholder: "Select Staff",
            itemsSource: astaffList,
            isEditable: false
        });

        cboStaffName.onSelectedIndexChanged = function () {
            //document.getElementById("staffId").value = staffCollection.items[this.selectedIndex].Id
        }
    }

    // ==============
    //  Problem Type
    // ==============

    function getProblemTypes() {
        return ["New Installation",
                "Software bug",
                "Data Tracing",
                "New Feature",
                "Hardware or Infrastructure Problem",
                "Retraining",
                "Reinstallation",
                "Program Update",
                "Data Archiving/Truncate"];
    }

    // ==============
    //  Severity
    // ==============

    function getSeverity() {
        return ["High (3hrs. resolution)",
                "Moderate (1 day resolution)",
                "Low (2 day resolution)",
                "Gossip"];
    }

    // ==============
    //  Status
    // ==============

    function getStatus() {
        return ["Pending/On-going",
                "Done",
                "Cancelled",
                "Waiting for Client"];
    }

    // =============================
    // Combo Box Wijmo - Problem Type
    // =============================

    function createProblemTypeCboBox() {
        var cmb = new wijmo.input.ComboBox('#problemTypeDiv', {
            itemsSource: getProblemTypes(),
            placeholder: 'Select Problem',
            isEditable: false
        });

    }

    // =============================
    // Combo Box Wijmo - Severity
    // =============================

    function createSeverityCboBox() {
        var cmb = new wijmo.input.ComboBox('#severityDiv', {
            itemsSource: getSeverity(),
            placeholder: 'Select Severity',
            isEditable: false
        });

    }

    // =============================
    // Combo Box Wijmo - Status
    // =============================

    function createStatusCboBox() {
        var cmb = new wijmo.input.ComboBox('#statusDiv', {
            itemsSource: getStatus(),
            placeholder: 'Select Status',
            isEditable: false
        });

    }

    ////Client list

    //function getClientMasterList() {
    //    clientList = new wijmo.collections.ObservableArray();
    //    $.ajax({
    //        url: '/api/client/list',
    //        cache: false,
    //        type: 'GET',
    //        contentType: 'application/json; charset=utf-8',
    //        data: {},
    //        success: function (results) {
    //            var lastClient = 0;
    //            if (results.length > 0) {
    //                for (i = 0; i < results.length; i++) {
    //                    clientList.push({
    //                        EditId: "<button class='btn btn-primary btn-xs btn-block' id='clientEditButton' onClick='cmdClientEditButton_OnClick()'><i class='fa fa-pencil'></i> Edit</button>",
    //                        DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='clientDeleteButton' onclick='cmdClientDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
    //                        Id: results[i]["Id"],
    //                        CompanyName: results[i]["CompanyName"],
    //                        CompanyAddress: results[i]["CompanyAddress"],
    //                        ContactNumber: results[i]["ContactNumber"],
    //                        IsLocked: results[i]["IsLocked"]

    //                    });}
    //                }
    //            }
    //        })
    //    }
            

  
                // =======================
                // Get Task Data by date
                // =======================

                function getTaskList() {
                    var taskList = new wijmo.collections.ObservableArray();
                    $.ajax({
                        url: '/api/task/listByDate/' + "2016-6-1",
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        //data: data,
                        success: function (results) {
                            var lastUser = 0;
                            if (results.length > 0) {
                                for (i = 0; i < results.length; i++) {
                                    var name = "";
                                    for (x = 0; x < clientList.length; x++) {
                                        if (clientList[x].Id == results[i]["ClientId"]) {
                                            name = clientList[x].CompanyName;
                                            break;
                                        }
                                    }
                                    taskList.push({
                                        EditId: "<button class='btn btn-primary btn-xs btn-block' id='userEditButton' onClick='cmdUserEditButton_OnClick()'><i class='fa fa-bars'></i> View</button>",
                                        DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='userDeleteButton' onclick='cmdUserDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                        Id: results[i]["Id"],
                                        TaskNo: results[i]["TaskNo"],
                                        TaskDate: results[i]["TaskDate"],
                                        ClientId: name,
                                        Status: results[i]["Status"],
                                        ProductId: results[i]["ProductId"],
                                        ProductCode: results[i]["ProductCode"],
                                        ProblemType: results[i]["ProblemType"]

                                    });
                                }
                            }
                        }
                    });

                    return taskList;
                }
            
   
                // ============
                // On Page Load
                // ============
                $(document).ready(function () {

                    theDate = new Date();
                    // create InputDate control
                    inputDate = new wijmo.input.InputDate('#theInputDate', {
                        min: new Date(2014, 01, 01),
                        format: 'M/dd/yyyy',
                        value: theDate,
                        disabled: true,
                        onValueChanged: function () {
                            dateId = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                        }
                    });
                    //inputDate.valueChanged.addHandler(valueChanged);

                    dateId = [inputDate.value.getFullYear(), inputDate.value.getMonth() + 1, inputDate.value.getDate() ].join('-');

                    document.getElementById("taskNoDiv").value = dateId;

                    ////////////////
                    //////////
                    ////////////////
                    cboBoxClientName = new wijmo.input.ComboBox('#clientDiv');
                    cboBoxProductName = new wijmo.input.ComboBox('#productDiv');
                    cboStaffName = new wijmo.input.ComboBox('#cboStaffNameDiv');
                    cboAssignedStaffName = new wijmo.input.ComboBox('#cboStaffAssignedDiv');
       
                    getClientName();
                    getProduct();
                    getStaffName();
                    createProblemTypeCboBox();
                    createSeverityCboBox();
                    createStatusCboBox();
                    getTaskList();
                });
</script>

@Html.Partial("Footer")

@{
    ViewBag.Title = "AddTask";
}

<head>
    @Styles.Render("~/Content/styleD.css")
</head>
@Html.Partial("NavBar")

<div class="container">
    <section class="content-header">
        <h2>
            Task Detail
        </h2>
        <ol class="breadcrumb">
            <li><a href="../Software/Dashboard"><i class="fa fa-table"></i> Home</a></li>
            <li> <a href="../Software/Task">Task</a></li>
            <li class="active">Add Task</li>
        </ol>
    </section>

    <div class="btn-group-horizontal btn-sm pull-right">
        <button class="btn btn-info" id="" onclick="cmdAddTask()"><i class="fa fa-plus"></i> Add</button>
        <a href="../Software/Task" class="btn btn-danger "><i class="fa fa-close"></i> Close</a>
    </div>
    <br/>
    <br/>
    <div class="row">
        <form class="form-horizontal" id="add-form">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="barCode" class="col-sm-3 control-label">Task Date</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control requiredField" id="theInputDate">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="barCode" class="col-sm-3 control-label">Task No</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control requiredField" id="taskNoDiv">
                        </div>
                    </div>
                    <!--Client-->
                    <div class="form-group">
                        <label for="" class="col-sm-3 control-label">Client</label>
                        <div class="col-sm-5">
                            <div id="clientDiv"></div>
                        </div>
                    </div>
                    <!--Product-->
                    <div class="form-group">
                        <label for="" class="col-sm-3 control-label">Product</label>
                        <div class="col-sm-5">
                            <div style="width:330px;" id="productDiv"></div>
                        </div>
                    </div>
                    <!--Caller-->
                    <div class="form-group">
                        <label for="barCode" class="col-sm-3 control-label">Caller</label>
                        <div class="col-sm-6">
                            <input type="text" class="form-control requiredField" id="callerDiv">
                        </div>
                    </div>
                    <!--Concern-->
                    <div class="form-group">
                        <label for="barCode" class="col-sm-3 control-label">Concern</label>
                        <div class="col-sm-6">
                            <textarea type="" class="form-control requiredField" id="concernDiv"></textarea>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <!--Answered by Staff-->
                    <div class="form-group">
                        <label for="" class="col-sm-3 control-label">Answered By</label>
                        <div class="col-sm-5">
                            <div id="cboStaffNameDiv"></div>
                        </div>
                    </div>
                    <!--Staff Assigned-->
                    <div class="form-group">
                        <label for="" class="col-sm-3 control-label">Staff Assigned</label>
                        <div class="col-sm-5">
                            <div id="cboStaffAssignedDiv"></div>
                        </div>
                    </div>
                    <!--Remarks-->
                    <div class="form-group">
                        <label for="barCode" class="col-sm-3 control-label">Remarks</label>
                        <div class="col-sm-6">
                            <textarea type="" class="form-control requiredField" id="remarksDiv"></textarea>
                        </div>
                    </div>
                    <!--Problem Type-->
                    <div class="form-group">
                        <label for="designation" class="col-sm-3 control-label">Problem Type</label>
                        <div class="col-sm-6">
                            <div style="width:290px;" id="problemTypeDiv"></div>
                        </div>
                    </div>
                    <!--Severity-->
                    <div class="form-group">
                        <label for="designation" class="col-sm-3 control-label">Severity</label>
                        <div class="col-sm-6">
                            <div style="width:250px;" id="severityDiv"></div>
                        </div>
                    </div>
                    <!--Status-->
                    <div class="form-group">
                        <label for="designation" class="col-sm-3 control-label">Severity</label>
                        <div class="col-sm-6">
                            <div id="statusDiv"></div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="container">
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#home">Action</a></li>
            <li><a data-toggle="tab" href="#menu1">Solution</a></li>
        </ul>

        <div class="tab-content">
            <div id="home" class="tab-pane fade in active">
                <div id="loadingif" style="margin: 0 auto;">
                    <img class="img-responsive center-block" src="/../images/loadingC.gif">
                </div>
                <div id="actionDiv"></div>
            </div>
            <div id="menu1" class="tab-pane fade">
                <form class="form-horizontal" id="add-form">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label for="barCode" class="control-label">Solution</label>
                                <div class="col-sm-12">
                                    <textarea type="" class="form-control requiredField" id=""></textarea>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="doneDateDiv" class="col-sm-2 control-label">Done Date</label>
                                <div class="col-sm-6">
                                    <div id="doneDateDiv"></div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="doneDateDiv" class="col-sm-2 control-label">Done Time</label>
                                <div class="col-sm-6">
                                    <div id="doneTimeDiv"></div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="doneDateDiv" class="col-sm-2 control-label">Verified by</label>
                                <div class="col-sm-6">
                                    <div id="verifiedDiv"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/software-js")
<script type="text/javascript">

    var clientList;
    var productList;
    var cboBoxClientName;
    var cboClientNameSelectedValue = "";
    var cboStaffName;
    var cboAssignedStaffName;
    var problemTypeList;
    var taskList;
    var inputDate;
    var dateId;
    var taskNumber;
    var inputTime;
    var actionList;

    // ==================
    // Get Client Data
    // ==================

    function getClientName() {
        clientList = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/client/list',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (results) {
                var lastUser = 0;
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        clientList.push({
                            Id: results[i]["Id"],
                            CompanyName: results[i]["CompanyName"]
                        });
                    }
                    cboClientName(clientList);
                } else {
                    cboClientName(clientList);
                }
            }
        });

        return clientList;
    }

    // =============================
    // Combo Box Wijmo - Client
    // =============================

    function cboClientName(productList) {
        //var clientCollection = new wijmo.collections.CollectionView(productList);
        //var productList = new Array();
        //for (var i = 0; i < clientCollection.items.length; i++) {

        //    productList.push(clientCollection.items[i].CompanyName);
        //}

        cboBoxClientName.dispose();
        cboBoxClientName = new wijmo.input.ComboBox('#clientDiv', {
            placeholder: "Select Client",
            displayMemberPath: "CompanyName",
            selectedValuePath: "Id",
            itemsSource: productList,

        });

        cboBoxClientName.onSelectedIndexChanged = function () {
        }
    }

    // ==================
    // Get Product Data
    // ==================

    function getProduct() {
        var productList = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/product/list',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (results) {
                var lastUser = 0;
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        productList.push({
                            Id: results[i]["Id"],
                            ProductCode: results[i]["ProductCode"],
                            ProductDescription: results[i]["ProductDescription"]
                        });
                    }
                    cboProductName(productList);
                } else {
                    cboProductName(productList);
                }
            }
        });

        return productList;
    }

    // =============================
    // Combo Box Wijmo - Product 
    // =============================

    function cboProductName(productList) {
        var productCollection = new wijmo.collections.CollectionView(productList);
        var productList = new Array();
        for (var i = 0; i < productCollection.items.length; i++) {

            productList.push(productCollection.items[i].ProductDescription);
        }

        cboBoxProductName.dispose();
        cboBoxProductName = new wijmo.input.ComboBox('#productDiv', {
            placeholder: "Select Product",
            itemsSource: productList,
            isEditable: false,
        });

        cboBoxProductName.onSelectedIndexChanged = function () {
        }
    }

    // ==================
    // Get StaffName Data
    // ==================

    function getStaffName() {
        var staffList = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/staff/list',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (results) {
                var lastUser = 0;
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        staffList.push({
                            Id: results[i]["Id"],
                            StaffName: results[i]["StaffName"]
                        });
                    }
                    createCboStaff(staffList);
                    createCboStaffAssignedName(staffList);
                    createCboStaffVerified(staffList);

                } else {
                    createCboStaff(staffList);
                    createCboStaffAssignedName(staffList);
                    createCboStaffVerified(staffList);
                }
            }
        });

        return staffList;
    }

    // =============================
    // Combo Box Wijmo - Staff Name
    // =============================

    function createCboStaff(staffList) {
        var staffCollection = new wijmo.collections.CollectionView(staffList);
        var astaffList = new Array();
        for (var i = 0; i < staffCollection.items.length; i++) {

            astaffList.push(staffCollection.items[i].StaffName);
        }

        cboStaffName.dispose();
        cboStaffName = new wijmo.input.ComboBox('#cboStaffNameDiv', {
            placeholder: "Select Staff",
            itemsSource: astaffList,
            isEditable: false
        });

        cboStaffName.onSelectedIndexChanged = function () {
            document.getElementById("staffId").value = staffCollection.items[this.selectedIndex].Id
        }
    }

    // =============================
    // Combo Box Wijmo - Staff Assigned
    // =============================

    function createCboStaffAssignedName(staffList) {
        var staffCollection = new wijmo.collections.CollectionView(staffList);
        var astaffList = new Array();
        for (var i = 0; i < staffCollection.items.length; i++) {

            astaffList.push(staffCollection.items[i].StaffName);
        }

        cboAssignedStaffName.dispose();
        cboAssignedStaffName = new wijmo.input.ComboBox('#cboStaffAssignedDiv', {
            placeholder: "Select Staff",
            itemsSource: astaffList,
            isEditable: false
        });

        cboStaffName.onSelectedIndexChanged = function () {
            //document.getElementById("staffId").value = staffCollection.items[this.selectedIndex].Id
        }
    }

    // ==============
    //  Problem Type
    // ==============

    function getProblemTypes() {
        return ["New Installation",
                "Software bug",
                "Data Tracing",
                "New Feature",
                "Hardware or Infrastructure Problem",
                "Retraining",
                "Reinstallation",
                "Program Update",
                "Data Archiving/Truncate"];
    }

    // ==============
    //  Severity
    // ==============

    function getSeverity() {
        return ["High (3hrs. resolution)",
                "Moderate (1 day resolution)",
                "Low (2 day resolution)",
                "Gossip"];
    }

    // ==============
    //  Status
    // ==============

    function getStatus() {
        return ["Pending/On-going",
                "Done",
                "Cancelled",
                "Waiting for Client"];
    }

    // =============================
    // Combo Box Wijmo - Problem Type
    // =============================

    function createProblemTypeCboBox() {
        var cmb = new wijmo.input.ComboBox('#problemTypeDiv', {
            itemsSource: getProblemTypes(),
            placeholder: 'Select Problem',
            isEditable: false
        });

    }

    // =============================
    // Combo Box Wijmo - Severity
    // =============================

    function createSeverityCboBox() {
        var cmb = new wijmo.input.ComboBox('#severityDiv', {
            itemsSource: getSeverity(),
            placeholder: 'Select Severity',
            isEditable: false
        });

    }

    // =============================
    // Combo Box Wijmo - Status
    // =============================

    function createStatusCboBox() {
        var cmb = new wijmo.input.ComboBox('#statusDiv', {
            itemsSource: getStatus(),
            placeholder: 'Select Status',
            isEditable: false
        });
    }

    // =======================
    // Get Task Data by date
    // =======================
    function getTaskList() {
        taskList = new wijmo.collections.ObservableArray
        $.ajax({
            url: '/api/task/listByDate/' + dateId,
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            //data: data,
            success: function (results) {
                var lastUser = 0;
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        var name = "";
                        for (x = 0; x < clientList.length; x++) {
                            if (clientList[x].Id == results[i]["ClientId"]) {
                                name = clientList[x].CompanyName;
                                break;
                            }
                        }
                        taskList.push({
                            EditId: "<button class='btn btn-primary btn-xs btn-block' id='userEditButton' onClick='cmdUserEditButton_OnClick()'><i class='fa fa-bars'></i> View</button>",
                            DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='userDeleteButton' onclick='cmdUserDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                            Id: results[i]["Id"],
                            TaskNo: results[i]["TaskNo"],
                            TaskDate: results[i]["TaskDate"],
                            ClientId: name,
                            Status: results[i]["Status"],
                            ProductId: results[i]["ProductId"],
                            ProductCode: results[i]["ProductCode"],
                            ProblemType: results[i]["ProblemType"]

                        });
                    }
                }
            }
        });

        return taskList;
    }

    //Format Date MM-dd-yyy
    function getDate() {
        var year = inputDate.value.getFullYear();
        var month = (1 + inputDate.value.getMonth()).toString();
        month = month.length > 1 ? month : '0' + month;
        var day = inputDate.value.getDate().toString();
        day = day.length > 1 ? day : '0' + day;
        dateId = year + '-' + month + '-' + day;

        //document.getElementById("taskNoDiv").value = dateId;
    }

    //Task No. Generator
    function generateTaskNo() {
        $.ajax({
            url: '/api/task/listByOrder/' + dateId,
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (results) {
                if (results == null) {
                    document.getElementById("taskNoDiv").value = dateId + '-' + '001';
                } else {
                    taskNumber = results.TaskNo;
                    var t = taskNumber.split("-");
                    var f = parseInt(t[3], 10);
                    var p = f + 1;

                    if (f < 10) {
                        document.getElementById("taskNoDiv").value = dateId + '-' + '00' + p;
                    } else if (f=>10) {
                        document.getElementById("taskNoDiv").value = dateId + '-' + '0' + p;
                    }
                }
            }
        });
    }

    // =============================
    // Combo Box Wijmo - Staff Assigned
    // =============================

    function createCboStaffVerified(staffList) {
        var staffCollection = new wijmo.collections.CollectionView(staffList);
        var astaffList = new Array();
        for (var i = 0; i < staffCollection.items.length; i++) {

            astaffList.push(staffCollection.items[i].StaffName);
        }

        cboStaffVerified.dispose();
        cboStaffVerified = new wijmo.input.ComboBox('#verifiedDiv', {
            placeholder: "Select Staff",
            itemsSource: astaffList,
            isEditable: false
        });

        cboStaffName.onSelectedIndexChanged = function () {
            //document.getElementById("staffId").value = staffCollection.items[this.selectedIndex].Id
        }
    }

    //// =============================
    //// Get Action Data
    //// =============================

    //function getAction() {
    //    actionList = new wijmo.collections.ObservableArray();
    //    $.ajax({
    //        url: '/api/tasksub/list/' + taskList.currentItem.Id,
    //        cache: false,
    //        type: 'GET',
    //        contentType: 'application/json; charset=utf-8',
    //        data: {},
    //        success: function (results) {
    //            var lastProduct = 0;
    //            $('#loadingif').hide();
    //            if (results.length > 0) {
    //                for (i = 0; i < results.length; i++) {
    //                    actionList.push({
    //                        EditId: "<button class='btn btn-primary btn-xs btn-block' id='productEditButton' onClick='cmdProductEditButton_OnClick()'><i class='fa fa-pencil'></i> Edit</button>",
    //                        DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='productDeleteButton' onclick='cmdProductDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
    //                        Id: results[i]["Id"],
    //                        TaskId: results[i]["TaskId"],
    //                        Action: results[i]["Action"],
    //                        DateCalled: results[i]["DateCalled"]

    //                    });
    //                }
    //            }
    //        }
    //    });

    //    return actionList;
    //}

        // ============
        // Add Task
        // ============
        function cmdAddTask() {
            var taskObject = new Object();
            userObject.TaskDate = dateId;
            userObject.TaskNo = document.getElementById("").value;
            userObject.ClientId = cboBoxClientName.selectedValue;
            //userObject.ProductId = cboBoxClientName.ProductId.selectedValue;
            userObject.Caller = document.getElementById("callerDiv").value;
            userObject.Concern = document.getElementById("concernDiv").value;
            userObject.AnsweredBy = cboStaffName.StaffId.selectedValue;
            userObject.StaffId = cboAssignedStaffName.StaffId.selectedValue;
            userObject.Remarks = document.getElementById("remarksDiv").value;
            //userObject.ProblemType = 
        }
    
   
                // ============
                // On Page Load
                // ============
                $(document).ready(function () {

                    //TASK DATE
                    theDate = new Date();
                    // create InputDate control
                    inputDate = new wijmo.input.InputDate('#theInputDate', {
                        min: new Date(2014, 01, 01),
                        format: 'MM/dd/yyyy',
                        value: theDate,
                        disabled: true
                    });

                    //DONE DATE
                    doneDate = new Date();
                    // create InputDate control
                    inputDate = new wijmo.input.InputDate('#doneDateDiv', {
                        min: new Date(2014, 01, 01),
                        format: 'MM/dd/yyyy',
                        value: doneDate
                    });

                    // DONE TIME
                    doneTime = new Date();
                    inputTime = new wijmo.input.InputTime('#doneTimeDiv', {
                    min: new Date(2014, 8, 1, 9, 0),
                    max: new Date(2014, 8, 1, 17, 0),
                    step: 15,
                    format: 'h:mm tt',
                    value: doneTime
                    });
                    ////////////////
                    //////////
                    ////////////////
                    
                    cboBoxClientName = new wijmo.input.ComboBox('#clientDiv');
                    cboBoxProductName = new wijmo.input.ComboBox('#productDiv');
                    cboStaffName = new wijmo.input.ComboBox('#cboStaffNameDiv');
                    cboAssignedStaffName = new wijmo.input.ComboBox('#cboStaffAssignedDiv');
                    cboStaffVerified = new wijmo.input.ComboBox('#verifiedDiv');
       
                    getDate();
                    generateTaskNo();

                    getClientName();
                    getProduct();
                    getStaffName();
                    createProblemTypeCboBox();
                    createSeverityCboBox();
                    createStatusCboBox();
                    getTaskList();
                    //getAction();

                    //Flex Grid
                    var productGrid = new wijmo.grid.FlexGrid('#actionDiv');
                    productGrid.initialize({
                        columns: [


                        {
                            "header": "Edit",
                            "binding": "EditId",
                            "width": 70,
                            "align": "center",
                            "isContentHtml": true
                        },
                        {
                            "header": "Delete",
                            "binding": "DeleteId",
                            "width": 90,
                            "align": "center",
                            "isContentHtml": true

                        },
                        {
                            "header": "Action",
                            "binding": "ProductCode",
                            "align": "center",
                            "allowSorting": true,
                            "width": "2.5*"
                        },
                        {
                            "header": "Date Called",
                            "binding": "ProductDescription",
                            "align": "center",
                            "allowSorting": true,
                            "width": "5*"
                        },
                        {
                            "header": "Time Called",
                            "binding": "ProductDescription",
                            "align": "center",
                            "allowSorting": true,
                            "width": "5*"
                        },
                        {
                            "header": "Finish Date",
                            "binding": "ProductDescription",
                            "align": "center",
                            "allowSorting": true,
                            "width": "5*"
                        },
                        {
                            "header": "Finish Time",
                            "binding": "ProductDescription",
                            "align": "center",
                            "allowSorting": true,
                            "width": "5*"
                        },
                        {
                            "header": "Remarks",
                            "binding": "Remarks",
                            "align": "center",
                            "allowSorting": true,
                            "width": "1.5*"
                        }],
                        autoGenerateColumns: false,
                        itemsSource: productList,
                        isReadOnly: true,
                        autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                        allowDragging: wijmo.grid.AllowDragging.None,
                        selectionMode: wijmo.grid.SelectionMode.Row
                    });

                    productGrid.trackChanges = true;
                });
</script>

@Html.Partial("Footer")